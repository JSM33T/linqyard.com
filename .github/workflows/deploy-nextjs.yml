name: Deploy NextJS Service

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'frontend_nextjs/**'

jobs:
  deploy-nextjs:
    runs-on: ubuntu-latest

    steps:
      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Trust remote host
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy nextjs service (locked & health-gated via compose)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
          SERVICE_NAME: nextjs  # set to your compose service key (e.g., nextjs)
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "bash -lc '
            set -euo pipefail

            LOCKFILE=\"${REMOTE_DIR}/.deploy.lock\"
            exec 9>\"\$LOCKFILE\"
            echo \"[nextjs] Waiting for exclusive lock: \$LOCKFILE\"
            if ! flock -w 600 9; then
              echo \"[nextjs] ERROR: Could not acquire deploy lock within 10 minutes.\" >&2
              exit 1
            fi
            echo \"[nextjs] Lock acquired at \$(date -Is)\"
            trap \"echo [nextjs] Releasing lock; flock -u 9\" EXIT

            cd \"${REMOTE_DIR}\"
            git fetch --all --prune
            git checkout -f main || git switch -f main
            git reset --hard
            git clean -fd -e logs/
            git pull --ff-only

            echo \"[nextjs] Rebuilding and bringing up service with health wait...\"
            DOCKER_BUILDKIT=1 docker compose -p linqyard up -d --build --remove-orphans --wait --wait-timeout 180 \"$SERVICE_NAME\"

            echo \"[nextjs] Deploy verified by compose --wait âœ…\"
          '"

      - name: Show recent service logs (shared lock)
        if: always()
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
          SERVICE_NAME: nextjs
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "bash -lc '
            set -euo pipefail

            LOCKFILE=\"${REMOTE_DIR}/.deploy.lock\"
            exec 9>\"\$LOCKFILE\"
            # Shared lock; wait up to 2 minutes to avoid clashing with an active deploy
            if flock -s -w 120 9; then
              cd \"${REMOTE_DIR}\"
              docker compose -p linqyard logs \"$SERVICE_NAME\" --since=5m || true
            else
              echo \"[nextjs] Skipping logs: could not acquire shared lock within 2 minutes\" >&2
            fi
          '"
